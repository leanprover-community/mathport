From 9228d3949bda8c1411e707b3e20650fa1fdb9b4d Mon Sep 17 00:00:00 2001
From: Daniel Selsam <daniel.selsam@protonmail.com>
Date: Sat, 23 Jan 2021 15:00:09 -0800
Subject: [PATCH] temp: whnf the type of inductives

---
 src/kernel/inductive.cpp | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/src/kernel/inductive.cpp b/src/kernel/inductive.cpp
index 3d1a47659b..9c48383c36 100644
--- a/src/kernel/inductive.cpp
+++ b/src/kernel/inductive.cpp
@@ -168,6 +168,7 @@ public:
             tc().check(type, m_lparams);
             m_nindices.push_back(0);
             unsigned i = 0;
+            type = whnf(type);
             while (is_pi(type)) {
                 if (i < m_nparams) {
                     if (first) {
@@ -181,9 +182,11 @@ public:
                     }
                     i++;
                 } else {
-                    type = binding_body(type);
+                    expr index = mk_local_decl_for(type);
+                    type = instantiate(binding_body(type), index);
                     m_nindices.back()++;
                 }
+                type = whnf(type);
             }
             if (i != m_nparams)
                 throw kernel_exception(m_env, "number of parameters mismatch in inductive datatype declaration");
@@ -527,6 +530,8 @@ public:
             rec_info info;
             expr t      = ind_type.get_type();
             unsigned i  = 0;
+
+            t = whnf(t);
             while (is_pi(t)) {
                 if (i < m_nparams) {
                     t = instantiate(binding_body(t), m_params[i]);
@@ -536,6 +541,7 @@ public:
                     t = instantiate(binding_body(t), idx);
                 }
                 i++;
+                t = whnf(t);
             }
             info.m_major = mk_local_decl("t", mk_app(mk_app(m_ind_cnsts[d_idx], m_params), info.m_indices));
             expr C_ty = mk_sort(m_elim_level);
--
2.30.1 (Apple Git-130)

